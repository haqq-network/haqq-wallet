import {Linking} from 'react-native';
import Markdown from 'react-native-markdown-package';

import {PopupContainer} from '@app/components/ui';
import {createTheme} from '@app/helpers';

const text = `
## Solidity: How to use chatGPT to create/optimize/audit smart contracts!

## I know it’s a long article but it will change the way you code so take your time.

It’s 5 A.M., and I’ve spent the last 16 hours on chatGPT. Now, I’m here writing an article because I can’t sleep if I don’t share this.

**This is proof of concept about how to interact with chatGPT based on my experience. I expect that after this article, more and more developers will start writing about how they cracked the way we should discuss AI.**

![](https://cdn-images-1.medium.com/max/2000/1*-kxeGWbTWdTuwsfr2YRBzg.png)
>  **AI has the potential to greatly improve the development and execution of smart contracts. Here are a few reasons why AI should be used for this purpose:**
>  AI can help automate the process of creating smart contracts, reducing the need for human intervention and the potential for errors. AI can assist with the verification and validation of smart contracts, ensuring that they are accurate and meet the required standards.
>  AI can help identify and address potential vulnerabilities in smart contracts, improving their security and reducing the risk of hacking or other attacks.
>  AI can assist with the monitoring and enforcement of smart contracts, ensuring that they are executed as intended and that any disputes are resolved quickly and efficiently.
>  Overall, the use of AI in the development and execution of smart contracts has the potential to improve their accuracy, security, and efficiency, making them a more reliable and effective tool for a wide range of applications.”

***this text was generated by AI itself**

“Now, if you ask him, the funny guy says, “You may want to consult with a software developer…” But wait, Mr. chatGPT, I am the software developer! So this means I’m asking the wrong question!

After asking 24,173,431 questions, I realized something vital. By taking the time to understand how the AI “thinks,” you can improve your communication with it and get more useful responses. This can save you time, frustration, and potential setbacks in your smart contract development projects. So don’t hesitate to spend some time learning how to effectively “speak” with chatGPT, and you’ll be on your way to success.”

![](https://cdn-images-1.medium.com/max/2000/1*_Q0YL17xByZBP6aLG8FVxw.png)
>  So by asking the right question it says “bro I can help you”.

![](https://cdn-images-1.medium.com/max/2000/1*4ApKJyw2a-Alzojyo7OgmQ.png)

**This AI dude is godlike. It can write code for you, optimize the smart contract, audit the smart contract, write unit tests, write scripts, frontend, EVERYTHING**

**And the journey begins…**

I will present some use cases and how I discussed with it to solve my technical problems:

## Generate smart contracts from scratch:

My first attempt was to generate a voting app with very specific components. I wanted a:

* solidity smart contract

* with pragma 0.8.0

* voting app

* with an owner that can create a voting session

![](https://cdn-images-1.medium.com/max/2000/1*71sMsf1s_pDphBJNM9_KcA.png)

This is the code generated by AI:

 <iframe src="https://medium.com/media/372e4a52b28a7471384c8def6829704e" frameborder=0></iframe>

And this is the message from AI:

![](https://cdn-images-1.medium.com/max/2000/1*C_9Vz4z7zMOnf-lACrjvoA.png)

Now I want more. I would like to use Openzeppelin for ownership and I want to have signatures for voting.

![](https://cdn-images-1.medium.com/max/2000/1*RWw4mxZ1aEjgEwm2EEbyUQ.png)

the AI understood wrong the signature validation so I had to insist a bit.

Here is our discussion:

![](https://cdn-images-1.medium.com/max/2000/1*k9wP4JgNrxg6o3TOmB6_7w.png)

Here is the code generated by AI:

 <iframe src="https://medium.com/media/411860b5ef8e8556c1b0283eab11d678" frameborder=0></iframe>

Here is the text that was below the code:

![](https://cdn-images-1.medium.com/max/2000/1*QGGzayAm0uf6895gZTwnMw.png)

Hmm, what about some meta-transactions:

![](https://cdn-images-1.medium.com/max/2000/1*c2KXjPNDPQCH3L1iZrAT4w.png)

But it fails a bit, so I rephrase in a manner that AI will understand my requirement:

![](https://cdn-images-1.medium.com/max/2000/1*o3cuvZ9QrB8encU0wWR0PQ.png)

***my AI dude said “you are correct” and I started to laugh so hard.**

Here is the code:

 <iframe src="https://medium.com/media/bb941a669f40dfb0f78c5575a082690e" frameborder=0></iframe>

Here is the text:

![](https://cdn-images-1.medium.com/max/2000/1*L_70ix7KWro0-bmg79vRFw.png)

And so on…Now, this was just an example to prove that if you tell to chatGPT the right words in small steps you just have to write text, not code. I am stunned.

## Optimize smart contracts:

I took a smart contract written by me that was in progress with similar requirements to the Voting app generated above and I told to chatGPT to optimize it.

![](https://cdn-images-1.medium.com/max/2000/1*wU_6N_tg09X7kNz5m2ZgmQ.png)

*I wrote “Optimize this smart contract “ + paste the raw code.

![](https://cdn-images-1.medium.com/max/2000/1*cLWmkuTvLHlKPLG3oSDHpA.png)

I reset the thread and asked him again. The response:

![](https://cdn-images-1.medium.com/max/2000/1*mGf201fIrNe-BLz8_dXF6g.png)

But I got this error so I can't post the code (a very frustrating error in ChatGPT) :

![](https://cdn-images-1.medium.com/max/2000/1*zb8_XXyXzHNrzyYpAJNegA.png)

In a conclusion, if you have the right knowledge AI can give you good ideas to optimize the code. I’ve also tried “delete redundant code” and “rewrite comments”. I let you try for yourself.

## Unit tests:

![](https://cdn-images-1.medium.com/max/2000/1*q7xZZDtQWvT6hUyKf6H5RQ.png)

*text + copy-pasta the raw code.

![](https://cdn-images-1.medium.com/max/2000/1*XGEGbIMk-u__yU5uP61skQ.png)

And I think because it had to write a lot of code I got the magic error “network error”.

The third time when I pressed on “try again” I got this response I think it somehow knew it was to much code and gave me instructions on how to do it

![](https://cdn-images-1.medium.com/max/2000/1*M3mfTHSRXB6Xuf7FhHYisQ.png)

![](https://cdn-images-1.medium.com/max/2000/1*cgzrjn67QpJfsoPBKviPkg.png)

![](https://cdn-images-1.medium.com/max/2000/1*vGh87HJ-ZDi7nFgGV-SCFw.png)

…and so on the Ai dude wrote all the tests…

## Audit:

![](https://cdn-images-1.medium.com/max/2000/1*E86dBOv7OyxFMfWwNtOPzA.png)

Response:

![](https://cdn-images-1.medium.com/max/2000/1*YpvWHB_bqgOSzcpr_o3wNw.png)

Aham! So I'm still useful. Thanks chatGPT! . . . . . jokes on me, I just asked the wrong way!

![](https://cdn-images-1.medium.com/max/2000/1*YRPw0RxKNYF7PvZnlyh7aw.png)

The response with some false flags but still a response:

![](https://cdn-images-1.medium.com/max/2000/1*ESTEEhwG_85B5yetz7WSFQ.png)

Let's see what it says about Reentrancy:

![](https://cdn-images-1.medium.com/max/2000/1*GH6x6OkTiP39eTX_5ASXDQ.png)

I tried again:

![](https://cdn-images-1.medium.com/max/2000/1*wFqMmbDwBeMJ75J3WxrGjA.png)

Cool information. Thanks, AI dude.

## **Conclusion: If it’s used based on personal knowledge, it saves a lot of time, but if it’s used to learn new information, it’s better to “don’t trust, verify”**

You can [follow me on Twitter for more](https://twitter.com/catalin_balut).`;

export const NewsDetailScreen = () => {
  return (
    <PopupContainer style={styles.container}>
      <Markdown
        styles={markdownStyle.collectiveMd}
        onLink={(url: string) => Linking.openURL(url)}>
        {text}
      </Markdown>
    </PopupContainer>
  );
};

const styles = createTheme({
  container: {
    paddingHorizontal: 20,
  },
});

const markdownStyle = {
  singleLineMd: {
    view: {
      alignSelf: 'stretch',
    },
  },
  collectiveMd: {
    heading1: {
      color: 'red',
    },
    heading2: {
      color: 'green',
    },
    strong: {
      color: 'blue',
    },
    em: {
      color: 'cyan',
    },
    text: {
      color: 'black',
    },
    blockQuoteText: {
      color: 'grey',
    },
    blockQuoteSection: {
      flexDirection: 'row',
    },
    blockQuoteSectionBar: {
      width: 3,
      height: null,
      backgroundColor: '#DDDDDD',
      marginRight: 15,
    },
    codeBlock: {
      fontFamily: 'Courier',
      fontWeight: '500',
      backgroundColor: '#DDDDDD',
    },
    tableHeader: {
      backgroundColor: 'grey',
    },
  },
};
