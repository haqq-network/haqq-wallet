apply plugin: "com.android.application"
apply from: project(':react-native-config').projectDir.getPath() + "/dotenv.gradle"
apply plugin: "com.facebook.react"
apply plugin: "com.google.gms.google-services"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: 'kotlinx-serialization'

/**
 * This is the configuration block to customize your React Native Android app.
 * By default you don't need to apply any configuration, just uncomment the lines you need.
 */
react {
    /* Folders */
    //   The root of your project, i.e. where "package.json" lives. Default is '..'
    // root = file("../")
    //   The folder where the react-native NPM package is. Default is ../node_modules/react-native
    // reactNativeDir = file("../node_modules/react-native")
    //   The folder where the react-native Codegen package is. Default is ../node_modules/@react-native/codegen
    // codegenDir = file("../node_modules/@react-native/codegen")
    //   The cli.js file which is the React Native CLI entrypoint. Default is ../node_modules/react-native/cli.js
    // cliFile = file("../node_modules/react-native/cli.js")

    /* Variants */
    //   The list of variants to that are debuggable. For those we're going to
    //   skip the bundling of the JS bundle and the assets. By default is just 'debug'.
    //   If you add flavors like lite, prod, etc. you'll have to list your debuggableVariants.
    // debuggableVariants = ["liteDebug", "prodDebug"]

    /* Bundling */
    //   A list containing the node command and its flags. Default is just 'node'.
    // nodeExecutableAndArgs = ["node"]
    //
    //   The command to run when bundling. By default is 'bundle'
    // bundleCommand = "ram-bundle"
    //
    //   The path to the CLI configuration file. Default is empty.
    // bundleConfig = file(../rn-cli.config.js)
    //
    //   The name of the generated asset file containing your JS bundle
    // bundleAssetName = "MyApplication.android.bundle"
    //
    //   The entry file for bundle generation. Default is 'index.android.js' or 'index.js'
    // entryFile = file("../js/MyApplication.android.js")
    //
    //   A list of extra flags to pass to the 'bundle' commands.
    //   See https://github.com/react-native-community/cli/blob/main/docs/commands.md#bundle
    // extraPackagerArgs = []

    /* Hermes Commands */
    //   The hermes compiler command to run. By default it is 'hermesc'
    // hermesCommand = "$rootDir/my-custom-hermesc/bin/hermesc"
    //
    //   The list of flags to pass to the Hermes compiler. By default is "-O", "-output-source-map"
    // hermesFlags = ["-O", "-output-source-map"]
}

/**
 * Set this to true to Run Proguard on Release builds to minify the Java bytecode.
 */
def enableProguardInReleaseBuilds = false

/**
 * The preferred build flavor of JavaScriptCore (JSC)
 *
 * For example, to use the international variant, you can use:
 * `def jscFlavor = 'org.webkit:android-jsc-intl:+'`
 *
 * The international variant includes ICU i18n library and necessary data
 * allowing to use e.g. `Date.toLocaleString` and `String.localeCompare` that
 * give correct results when using with locales other than en-US. Note that
 * this variant is about 6MiB larger per architecture than default.
 */
def jscFlavor = 'org.webkit:android-jsc:+'

apply from: "../../node_modules/@sentry/react-native/sentry.gradle"
android {
  namespace 'com.haqq.wallet'
  ndkVersion rootProject.ext.ndkVersion

  buildToolsVersion rootProject.ext.buildToolsVersion
  compileSdk rootProject.ext.compileSdkVersion

  defaultConfig {
    applicationId "com.haqq.wallet"
    minSdkVersion rootProject.ext.minSdkVersion
    targetSdkVersion rootProject.ext.targetSdkVersion
    versionCode 738
    versionName project.env.get("APP_VERSION")
    missingDimensionStrategy 'react-native-camera', 'general'
    manifestPlaceholders = [
      appAuthRedirectScheme    : 'haqq'
    ]
    testBuildType System.getProperty('testBuildType', 'debug')
    testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
  }

  packagingOptions {
    exclude 'META-INF/DEPENDENCIES'
  }

  signingConfigs {
    debug {
      storeFile file('debug.keystore')
      storePassword 'android'
      keyAlias 'androiddebugkey'
      keyPassword 'android'
    }
    release {
      storeFile file('debug.keystore')
      storePassword 'android'
      keyAlias 'androiddebugkey'
      keyPassword 'android'
    }
  }
  buildTypes {
    debug {
      signingConfig signingConfigs.debug
      crunchPngs false
    }
    release {
      crunchPngs false
      // Caution! In production, you need to generate your own keystore file.
      // see https://reactnative.dev/docs/signed-apk-android.
      signingConfig signingConfigs.release
      minifyEnabled enableProguardInReleaseBuilds
      proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
      proguardFile "${rootProject.projectDir}/../node_modules/detox/android/detox/proguard-rules-app.pro"
    }
  }
}

dependencies {
  androidTestImplementation('com.wix:detox:+') {
      exclude module: "protobuf-lite"
  }
  // Fix for react-native-video-cache
  implementation 'com.danikula:videocache:2.7.1'
  implementation 'org.slf4j:slf4j-api:2.0.9'

  implementation 'com.jakewharton:process-phoenix:3.0.0'
  implementation 'com.facebook.soloader:soloader:0.10.4+'
  implementation 'androidx.appcompat:appcompat:1.1.0'
  implementation "com.facebook.react:react-android"
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
  implementation 'com.google.firebase:firebase-analytics'
  implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.4.0"
  implementation 'fr.acinq.secp256k1:secp256k1-kmp-jvm:0.7.0'
  implementation 'fr.acinq.secp256k1:secp256k1-kmp-jni-android:0.7.0'
  implementation 'com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava'
//  implementation 'fr.acinq.secp256k1:secp256k1-kmp-jni-jvm-darwin:0.7.0'

  implementation platform('org.jetbrains.kotlin:kotlin-bom:1.8.0')
  implementation platform('com.google.firebase:firebase-bom:30.3.2')

  implementation "com.github.komputing.khash:keccak:1.1.1"

  implementation 'commons-codec:commons-codec:1.13'
  implementation 'com.google.oauth-client:google-oauth-client:1.34.1'
  implementation 'com.google.api-client:google-api-client-android:1.35.2'
  implementation 'com.google.android.gms:play-services-auth:20.5.0'
  implementation 'com.google.apis:google-api-services-drive:v3-rev197-1.25.0'
  implementation 'com.google.android.gms:play-services-ads-identifier:18.0.1'
  implementation 'com.android.installreferrer:installreferrer:2.2'

  implementation project(':react-native-fs')
  implementation project(':react-native-restart')

  testImplementation platform("org.junit:junit-bom:5.9.1")
  testImplementation "org.junit.jupiter:junit-jupiter:5.9.1"

  if (hermesEnabled.toBoolean()) {
    implementation 'com.facebook.react:hermes-android'
  } else {
    implementation jscFlavor
  }
}

apply from: file("../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); applyNativeModulesAppBuildGradle(project)

android.testOptions {
  unitTests.all {
    useJUnitPlatform()
  }
}

configurations.all {
    resolutionStrategy {
        force 'androidx.test:core:1.5.0'
    }
}
