diff --git a/node_modules/@hcaptcha/react-native-hcaptcha/Hcaptcha.d.ts b/node_modules/@hcaptcha/react-native-hcaptcha/Hcaptcha.d.ts
index fa7a414..f94a316 100644
--- a/node_modules/@hcaptcha/react-native-hcaptcha/Hcaptcha.d.ts
+++ b/node_modules/@hcaptcha/react-native-hcaptcha/Hcaptcha.d.ts
@@ -81,6 +81,10 @@ type HcaptchaProps = {
    * hCaptcha SDK host identifier. null value means that it will be generated by SDK
    */
   host?: string;
+  /**
+   * default `false`
+   */
+  enableAutoOpenChallenge?: boolean;
 }
 
 export default class Hcaptcha extends React.Component<HcaptchaProps> {}
diff --git a/node_modules/@hcaptcha/react-native-hcaptcha/Hcaptcha.js b/node_modules/@hcaptcha/react-native-hcaptcha/Hcaptcha.js
index 9b82b69..f51cfbd 100644
--- a/node_modules/@hcaptcha/react-native-hcaptcha/Hcaptcha.js
+++ b/node_modules/@hcaptcha/react-native-hcaptcha/Hcaptcha.js
@@ -79,6 +79,7 @@ const Hcaptcha = ({
   assethost,
   imghost,
   host,
+  enableAutoOpenChallenge = false
 }) => {
   const apiUrl = buildHcaptchaApiUrl(jsSrc, siteKey, languageCode, theme, host, sentry, endpoint, assethost, imghost, reportapi);
 
@@ -94,7 +95,7 @@ const Hcaptcha = ({
     () => {
       var result = [];
       try {
-        const {major, minor, patch} = ReactNativeVersion.version;
+        const { major, minor, patch } = ReactNativeVersion.version;
         result.push(`rnver_${major}_${minor}_${patch}`);
         result.push('dep_' + md5(Object.keys(global).join('')));
         result.push('sdk_' + hcaptchaPackage.version.toString().replace(/\./g, '_'));
@@ -109,7 +110,7 @@ const Hcaptcha = ({
 
   const generateTheWebViewContent = useMemo(
     () =>
-     `<!DOCTYPE html>
+      `<!DOCTYPE html>
       <html>
       <head>
         <meta charset="UTF-8">
@@ -132,7 +133,9 @@ const Hcaptcha = ({
             }
             try {
               console.log("showing challenge");
-              hcaptcha.execute(getExecuteOpts());
+              if(${enableAutoOpenChallenge}) {
+                hcaptcha.execute(getExecuteOpts());
+              }
             } catch (e) {
               console.log("failed to show challenge");
               window.ReactNativeWebView.postMessage("error");
@@ -142,7 +145,7 @@ const Hcaptcha = ({
             window.ReactNativeWebView.postMessage(response);
           };
           var onCancel = function() {
-            window.ReactNativeWebView.postMessage("cancel");
+            window.ReactNativeWebView.postMessage("chalcancel");
           };
           var onOpen = function() {
             // NOTE: disabled for simplicity.
@@ -150,7 +153,7 @@ const Hcaptcha = ({
             console.log("challenge opened");
           };
           var onDataExpiredCallback = function(error) { window.ReactNativeWebView.postMessage("expired"); };
-          var onChalExpiredCallback = function(error) { window.ReactNativeWebView.postMessage("cancel"); };
+          var onChalExpiredCallback = function(error) { window.ReactNativeWebView.postMessage("chalexpired"); };
           var onDataErrorCallback = function(error) {
             console.log("challenge error callback fired");
             window.ReactNativeWebView.postMessage("error");
@@ -181,8 +184,10 @@ const Hcaptcha = ({
           };
         </script>
       </head>
-      <body style="background-color: ${backgroundColor};">
-        <div id="submit"></div>
+      <body style="background-color: ${backgroundColor}; -webkit-user-select: none; -ms-user-select: none; user-select: none;">
+          <div onclick="window.ReactNativeWebView.postMessage('click-outside')" style="background-color: none;align-self: center; display: flex; align-items: center; justify-content: center;flex: 1; height: 100vh; overflow: hidden;">
+            <div onclick="function (event) {event.stopPropagation()}" id="submit" style="padding: 2px;"></div>
+          </div>
       </body>
       </html>`,
     [siteKey, backgroundColor, theme, debugInfo]
@@ -200,6 +205,7 @@ const Hcaptcha = ({
 
   return (
     <WebView
+      scrollEnabled={false}
       originWhitelist={['*']}
       onShouldStartLoadWithRequest={(event) => {
         if (event.url.slice(0, 24) === 'https://www.hcaptcha.com') {
