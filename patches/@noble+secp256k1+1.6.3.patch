diff --git a/node_modules/@noble/secp256k1/lib/esm/index.js b/node_modules/@noble/secp256k1/lib/esm/index.js
index d78e0b9..9ef0a16 100644
--- a/node_modules/@noble/secp256k1/lib/esm/index.js
+++ b/node_modules/@noble/secp256k1/lib/esm/index.js
@@ -618,7 +618,7 @@ function invertBatch(nums, p = CURVE.P) {
     return scratch;
 }
 const divNearest = (a, b) => (a + b / _2n) / b;
-const POW_2_128 = _2n ** BigInt(128);
+const POW_2_128 = BigInt('340282366920938463463374607431768211456');
 function splitScalarEndo(k) {
     const { n } = CURVE;
     const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');
diff --git a/node_modules/@noble/secp256k1/lib/esm/package.json b/node_modules/@noble/secp256k1/lib/esm/package.json
index e8309c4..a3043b9 100644
--- a/node_modules/@noble/secp256k1/lib/esm/package.json
+++ b/node_modules/@noble/secp256k1/lib/esm/package.json
@@ -1,6 +1,29 @@
 {
   "type": "module",
   "browser": {
-    "crypto": false
+    "crypto": "react-native-crypto",
+    "http": "@tradle/react-native-http",
+    "https": "https-browserify",
+    "os": "react-native-os",
+    "_stream_transform": "readable-stream/transform",
+    "_stream_readable": "readable-stream/readable",
+    "_stream_writable": "readable-stream/writable",
+    "_stream_duplex": "readable-stream/duplex",
+    "_stream_passthrough": "readable-stream/passthrough",
+    "stream": "stream-browserify",
+    "vm": "vm-browserify"
+  },
+  "react-native": {
+    "crypto": "react-native-crypto",
+    "http": "@tradle/react-native-http",
+    "https": "https-browserify",
+    "os": "react-native-os",
+    "_stream_transform": "readable-stream/transform",
+    "_stream_readable": "readable-stream/readable",
+    "_stream_writable": "readable-stream/writable",
+    "_stream_duplex": "readable-stream/duplex",
+    "_stream_passthrough": "readable-stream/passthrough",
+    "stream": "stream-browserify",
+    "vm": "vm-browserify"
   }
 }
diff --git a/node_modules/@noble/secp256k1/lib/index.js b/node_modules/@noble/secp256k1/lib/index.js
index 20541ed..daf25b8 100644
--- a/node_modules/@noble/secp256k1/lib/index.js
+++ b/node_modules/@noble/secp256k1/lib/index.js
@@ -8,11 +8,11 @@ const _1n = BigInt(1);
 const _2n = BigInt(2);
 const _3n = BigInt(3);
 const _8n = BigInt(8);
-const POW_2_256 = _2n ** BigInt(256);
+const POW_2_256 = BigInt('115792089237316195423570985008687907853269984665640564039457584007913129639936');
 const CURVE = {
     a: _0n,
     b: BigInt(7),
-    P: POW_2_256 - _2n ** BigInt(32) - BigInt(977),
+    P: POW_2_256 - BigInt('4294967296') - BigInt(977),
     n: POW_2_256 - BigInt('432420386565659656852420866394968145599'),
     h: _1n,
     Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),
@@ -623,7 +623,7 @@ function invertBatch(nums, p = CURVE.P) {
     return scratch;
 }
 const divNearest = (a, b) => (a + b / _2n) / b;
-const POW_2_128 = _2n ** BigInt(128);
+const POW_2_128 = BigInt('340282366920938463463374607431768211456');
 function splitScalarEndo(k) {
     const { n } = CURVE;
     const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');
