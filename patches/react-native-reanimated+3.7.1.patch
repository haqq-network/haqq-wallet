diff --git a/node_modules/react-native-reanimated/src/reanimated2/mutables.ts b/node_modules/react-native-reanimated/src/reanimated2/mutables.ts
index 1d247a9..426a47b 100644
--- a/node_modules/react-native-reanimated/src/reanimated2/mutables.ts
+++ b/node_modules/react-native-reanimated/src/reanimated2/mutables.ts
@@ -75,7 +75,7 @@ export function makeMutable<Value>(initial: Value): Mutable<Value> {
         valueSetter(mutable, newValue);
       } else {
         runOnUI(() => {
-          mutable.value = newValue;
+          if (typeof mutable !== "undefined") mutable.value = newValue;
         })();
       }
     },
@@ -84,7 +84,7 @@ export function makeMutable<Value>(initial: Value): Mutable<Value> {
         return value;
       }
       const uiValueGetter = executeOnUIRuntimeSync((sv: Mutable<Value>) => {
-        return sv.value;
+        if (typeof sv !== "undefined") return sv.value;
       });
       return uiValueGetter(mutable);
     },
diff --git a/node_modules/react-native-reanimated/src/reanimated2/valueUnpacker.ts b/node_modules/react-native-reanimated/src/reanimated2/valueUnpacker.ts
index d5d1e77..d28e918 100644
--- a/node_modules/react-native-reanimated/src/reanimated2/valueUnpacker.ts
+++ b/node_modules/react-native-reanimated/src/reanimated2/valueUnpacker.ts
@@ -62,7 +62,7 @@ See \`https://docs.swmansion.com/react-native-reanimated/docs/guides/troubleshoo
     fun.__remoteFunction = objectToUnpack;
     return fun;
   } else {
-    throw new Error('[Reanimated] Data type not recognized by value unpacker.');
+    //throw new Error('[Reanimated] Data type not recognized by value unpacker.');
   }
 }
 
