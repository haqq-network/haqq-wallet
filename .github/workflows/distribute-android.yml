name: Distribute Android app

on:
  workflow_dispatch:
    inputs:
      IS_DEVELOPMENT:
        type: choice
        description: IS_DEVELOPMENT
        options:
          - false
          - true

      IS_SSS_ENABLED:
        type: choice
        description: IS_SSS_ENABLED
        options:
          - false
          - true

      IS_WELCOME_NEWS_ENABLED:
        type: choice
        description: IS_WELCOME_NEWS_ENABLED
        options:
          - false
          - true

  workflow_call:
    inputs:
      IS_DEVELOPMENT:
        required: true
        type: string
      IS_SSS_ENABLED:
        required: true
        type: string
      IS_WELCOME_NEWS_ENABLED:
        required: true
        type: string

jobs:
  build:
    name: Build and distribute Android app
    runs-on: [self-hosted, android]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
#       - uses: ruby/setup-ruby@v1
#         with:
#           ruby-version: '3.2.0'
      - name: Decode secrets
        run: |
          echo ${{secrets.HAQQ_KEYSTORE}} | base64 -d > android/app/haqq-upload-key.keystore
          echo ${{secrets.GOOGLE_SERVICE_ACCOUNT}} | base64 -d > android/app/google-account.json
          echo ${{secrets.GOOGLE_SERVICE_ANDROID}} | base64 -d > android/app/google-services.json

          echo "PROVIDER_NETWORK=${{secrets.PROVIDER_NETWORK}}" >> .env
          echo "PROVIDER_WS_NETWORK=${{secrets.PROVIDER_WS_NETWORK}}" >> .env
          echo "PROVIDER_CHAIN_ID=${{secrets.PROVIDER_CHAIN_ID}}" >> .env
          echo "SENTRY_DSN=${{secrets.SENTRY_DSN}}" >> .env
          echo "NETWORK_EXPLORER=${{secrets.NETWORK_EXPLORER}}" >> .env
          echo "PATTERNS_SOURCE=${{secrets.PATTERNS_SOURCE}}" >> .env
          echo "ENVIRONMENT=distribution" >> .env
          echo "IS_DEVELOPMENT=${{github.event.inputs.IS_DEVELOPMENT}}" >> .env
          echo "WALLET_CONNECT_PROJECT_ID=${{secrets.WALLET_CONNECT_PROJECT_ID}}" >> .env
          echo "WALLET_CONNECT_RELAY_URL=${{secrets.WALLET_CONNECT_RELAY_URL}}" >> .env
          echo "WEB3AUTH_CLIENT_ID=${{secrets.WEB3AUTH_CLIENT_ID}}" >> .env
          echo "HCAPTCHA_SITE_KEY=${{secrets.HCAPTCHA_SITE_KEY}}" >> .env
          echo "GOOGLE_SIGNIN_WEB_CLIENT_ID=${{secrets.GOOGLE_SIGNIN_WEB_CLIENT_ID}}" >> .env
          echo "CUSTOM_JWT_TOKEN=${{secrets.CUSTOM_JWT_TOKEN}}" >> .env
          echo "SSS_GOOGLE_IOS=${{secrets.SSS_GOOGLE_IOS}}" >> .env
          echo "SSS_GOOGLE_ANDROID=${{secrets.SSS_GOOGLE_ANDROID}}" >> .env
          echo "SSS_APPLE=${{secrets.SSS_APPLE}}" >> .env
          echo "SSS_CUSTOM=${{secrets.SSS_CUSTOM}}" >> .env
          echo "METADATA_URL=${{secrets.METADATA_URL}}" >> .env
          echo "GENERATE_SHARES_URL=${{secrets.GENERATE_SHARES_URL}}" >> .env
          echo "PUSH_NOTIFICATIONS_URL=${{secrets.PUSH_NOTIFICATIONS_URL}}" >> .env
          echo "AIRDROP_TESTEDGE2_URL=${{secrets.AIRDROP_TESTEDGE2_URL}}" >> .env
          echo "AIRDROP_MAINNET_URL=${{secrets.AIRDROP_MAINNET_URL}}" >> .env
          echo "HAQQ_BACKEND=${{secrets.HAQQ_BACKEND}}" >> .env
          echo "ADJUST_TOKEN=${{secrets.ADJUST_TOKEN}}" >> .env
          echo "ADJUST_ENVIRONMENT=${{secrets.ADJUST_ENVIRONMENT}}" >> .env
          echo "AIRDROP_GASDROP_SECRET=${{secrets.AIRDROP_GASDROP_SECRET}}" >> .env
          echo "AIRDROP_GASDROP_CAMPAIGN_ID=${{secrets.AIRDROP_GASDROP_CAMPAIGN_ID}}" >> .env
          echo "IS_SSS_ENABLED=${{github.event.inputs.IS_SSS_ENABLED}}" >> .env
          echo "IS_WELCOME_NEWS_ENABLED=${{github.event.inputs.IS_WELCOME_NEWS_ENABLED}}" >> .env

      - name: Install Fastlane
        run: |
          bundle install
      - name: Install packages
        run: yarn install --frozen-lockfile
      - name: Execute Fastlane command
        run: bundle exec fastlane android distribute
        env:
          HAQQ_UPLOAD_STORE_FILE: ${{ secrets.HAQQ_UPLOAD_STORE_FILE }}
          HAQQ_UPLOAD_STORE_PASSWORD: ${{ secrets.HAQQ_UPLOAD_STORE_PASSWORD }}
          HAQQ_UPLOAD_KEY_ALIAS: ${{ secrets.HAQQ_UPLOAD_KEY_ALIAS }}
          HAQQ_UPLOAD_KEY_PASSWORD: ${{ secrets.HAQQ_UPLOAD_KEY_PASSWORD }}
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          FIREBASE_TESTERS: ${{ secrets.FIREBASE_TESTERS }}
